package com.example.jeff.viewpagerdelete.Startup.Model;

import com.example.jeff.viewpagerdelete.Homepage.Model.Course;
import com.google.gson.Gson;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.Serializable;
import java.util.ArrayList;

/**
 * Created by Jeff on 3/23/17.
 */


/**
 * User object that adheres to the API User model
 */

public class User implements Serializable{

    private String _id; //Object id generated by the API
    private String userID; //user login id
    private String email;
    private String firstName;
    private String lastName;
    private ArrayList<Course> enrolledCourses;


    /******************************************/
    /***************CONSTRUCTORS***************/
    /******************************************/

    /**
     * Constructor: Attempts to build a User object from JSON data
     *
     * @param json: JSON data that should contain the properties needed for building a User object
     */
    public User(JSONObject json){

        try{

            this._id = json.getString("_id");
            this.userID = json.getString("userID");
            this.email = json.getString("email");
            this.firstName = json.getString("first");
            this.lastName = json.getString("last");

            //Build an arraylist of Courses from the JSON array "enrolledCourses"
            this.enrolledCourses = new ArrayList<>();

            JSONArray coursesArray = json.getJSONArray("enrolledCourses");

            for(int i = 0; i < coursesArray.length(); i++){
                this.enrolledCourses.add(new Course(coursesArray.getJSONObject(i)));
            }

        }
        catch (JSONException e){
            e.printStackTrace();
        }
    }


    /**
     * Constructor: builds a User object from identifying information about the user
     * @param _id: API-generated id for the User model
     * @param userID: User login/SSO id
     * @param email: User's email address
     * @param firstName: User's first name
     * @param lastName: User's last name
     */
    public User(String _id, String userID, String email, String firstName, String lastName) {
        this._id = _id;
        this.userID = userID;
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    /**
     * NO-arg constructor used for serializability
     */
    public User() {
    }


    /*************************************************/
    /***************GETTERS AND SETTERS***************/
    /*************************************************/

    /**
     * Retrieves the API-generated _id property for the User object
     * @return API-generated id
     */
    public String get_id() {
        return _id;
    }

    /**
     * Sets the API-generated _id property for the User object
     * @param _id API-generated id
     */
    public void set_id(String _id) {
        this._id = _id;
    }


    /**
     * Retrieves the user's login/SSO id
     * @return User's login id
     */
    public String getUserID() {
        return userID;
    }

    /**
     * Set's the user's login/SSO id
     * @param userID User's login/SSO id
     */
    public void setUserID(String userID) {
        this.userID = userID;
    }


    /**
     * Retrieves the user's email address
     * @return User's email address
     */
    public String getEmail() {
        return email;
    }

    /**
     * Set's the user's email address
     * @param email: User's email address
     */
    public void setEmail(String email) {
        this.email = email;
    }


    /**
     * Retrieves the user's first name
     * @return User's first name
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set's the user's first name
     * @param firstName User's first name
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }


    /**
     * Retrieves the user's last name
     * @return User's last name
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set's the user's last name
     * @param lastName User's last name
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }


    /**
     * Retrieves list of user's enrolled courses
     * @return List of user's enrolled courses
     */
    public ArrayList<Course> getEnrolledCourses() {
        return enrolledCourses;
    }

    /**
     * Set's user's enrolled courses
     * @param enrolledCourses ArrayList of enrolled courses
     */
    public void setEnrolledCourses(ArrayList<Course> enrolledCourses) {
        this.enrolledCourses = enrolledCourses;
    }


    /*************************************************/
    /***************HELPER METHODS********************/
    /*************************************************/

    /**
     * Convert's user object to JSON representation
     *
     * @return String containing User object's JSON representation
     */
    public String toJSON() {
        return new Gson().toJson(this);
    }

}
